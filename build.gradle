buildscript {
  repositories { jcenter() }
  dependencies { classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.4.2.RELEASE' }
}

plugins {
  id 'java'
  id 'idea'
  id 'eclipse'
  // gradle dependencyUpdates -Drevision=release
  id 'com.github.ben-manes.versions' version '0.13.0'
  id 'io.spring.dependency-management' version '0.6.1.RELEASE'
}

apply plugin: 'org.springframework.boot'

jar {
  baseName = 'angular2-spring-boot'
  version = '0.0.1'
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

repositories { jcenter() }

dependencies {
  compile 'org.springframework.boot:spring-boot-starter-security',
      'org.springframework.security:spring-security-web:4+',
      'org.springframework.boot:spring-boot-starter-data-rest',
      'org.springframework.boot:spring-boot-starter-data-jpa',
      'org.springframework.boot:spring-boot-starter-actuator',
      'org.springframework.boot:spring-boot-starter-mustache',
      'org.springframework.boot:spring-boot-starter-hateoas',
      'org.springframework.boot:spring-boot-devtools',
      'org.projectlombok:lombok:1+'

  runtime 'com.h2database:h2'

  testCompile 'org.springframework.boot:spring-boot-starter-test'
}

// build execulable jar: `bash build/libs/*.jar`
springBoot {
  executable = true
  mainClass = 'daggerok.Angular2SpringBootApplication'
}

task wrapper(type: Wrapper) {
  gradleVersion = '3.2.1'
}

/*
// turning on parallel builds
def ui = tasks.findByPath(':ui:ui')
build.dependsOn ui
build.shouldRunAfter ui
*/
